{"version":3,"sources":["Components/Navbar.js","Components/TextForm.js","Components/About.js","Components/Alert.js","Components/Contact.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","to","title","type","id","AboutText","Contact","onClick","toggledMode","role","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","console","log","navigator","clipboard","writeText","split","filter","element","About","defaultProps","Alert","height","alert","word","lower","charAt","slice","capitalize","msg","placeholder","App","setMode","setAlert","message","setTimeout","document","body","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a3f23012.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <Link className=\"navbar-brand\" to=\"/\">\r\n          {props.title}\r\n        </Link>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link \" aria-current=\"page\" to=\"/\">\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/About\">\r\n                {props.AboutText}\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/Contact \">\r\n                {props.Contact}\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n          <div\r\n            className={`form-check form-switch text-${\r\n              props.mode === \"light\" ? \"dark\" : \"light\"\r\n            }`}\r\n          >\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              onClick={props.toggledMode}\r\n              role=\"switch\"\r\n              id=\"flexSwitchCheckDefault\"\r\n            />\r\n            <label\r\n              className=\"form-check-label\"\r\n              htmlFor=\"flexSwitchCheckDefault\"\r\n            >\r\n              Enable Dark Mode{\" \"}\r\n            </label>\r\n          </div>\r\n          {/* <form className=\"d-flex\" >\r\n                                    <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                                    <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n                                </form> */}\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  AboutText: PropTypes.string.isRequired,\r\n  Contact: PropTypes.string.isRequired,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: \"Set title here\",\r\n  AboutText: \"About\",\r\n  Contact: \"Contact\",\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = () => {\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to uppercase!\", \"success\");\r\n  };\r\n\r\n  const handleloClick = () => {\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to lowercase\", \"success\");\r\n  };\r\n\r\n  const handleCopy = (event) => {\r\n    console.log(\"I am copy\");\r\n    navigator.clipboard.writeText(text);\r\n    props.showAlert(\"Text copied to clipboard\", \"success\");\r\n  };\r\n\r\n  const handleClearClick = () => {\r\n    let newText = \"\";\r\n    setText(newText);\r\n    props.showAlert(\"Text Cleared\", \"success\");\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const [text, setText] = useState(\"\");\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"container\"\r\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}\r\n      >\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            value={text}\r\n            onChange={handleOnChange}\r\n            style={{\r\n              backgroundColor: props.mode === \"dark\" ? \"#343a40\" : \"white\",\r\n              color: props.mode === \"dark\" ? \"white\" : \"#343a40\",\r\n            }}\r\n            id=\"myBox\"\r\n            rows=\"10\"\r\n          ></textarea>\r\n        </div>\r\n\r\n        <button\r\n          disabled={text.length === 0}\r\n          className=\"btn btn-primary mx-2 my-2\"\r\n          onClick={handleUpClick}\r\n        >\r\n          Convert to Uppercase\r\n        </button>\r\n\r\n        <button\r\n          disabled={text.length === 0}\r\n          className=\"btn btn-primary mx-2 my-2\"\r\n          onClick={handleloClick}\r\n        >\r\n          Convert to Lowercase\r\n        </button>\r\n\r\n        <button\r\n          disabled={text.length === 0}\r\n          className=\"btn btn-primary mx-2 my-2\"\r\n          onClick={handleCopy}\r\n        >\r\n          Copy text\r\n        </button>\r\n\r\n        <button\r\n          disabled={text.length === 0}\r\n          className=\"btn btn-primary mx-2 my-2\"\r\n          onClick={handleClearClick}\r\n        >\r\n          Clear text\r\n        </button>\r\n      </div>\r\n      <div\r\n        className=\"container my-3\"\r\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}\r\n      >\r\n        <h2>Your text summary.</h2>\r\n        <p>\r\n          {\r\n            text.split(/\\s+/).filter((element) => {\r\n              return element.length !== 0;\r\n            }).length\r\n          }\r\n          words and{text.length}Characters.\r\n        </p>\r\n        <h2>Preview.</h2>\r\n        <p>{text.length > 0 ? text : \"Nothing to priview.\"}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function About(props) {\r\n  return (\r\n    <div\r\n      className=\"container\"\r\n      style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}\r\n    >\r\n      <h1>{props.heading}</h1>\r\n      <h1 className=\"my-3\"> About Us</h1>\r\n      <p>In computing, the term textutils refers to the theory and practice of automating the creation or manipulation of electronic text. Text usually refers to all the alphanumeric characters specified on the keyboard of the person engaging the practice, but in general text means the abstraction layer immediately above the standard character encoding of the target text. The term processing refers to automated (or mechanized) processing, as opposed to the same manipulation done manually.</p>\r\n      <br></br>\r\n      <h4>Features we caring :</h4>\r\n      <p>\r\n      <strong> • Data changecase:</strong>  TextUtils can help you to change your text or numbers into uppercase and lowercase. Data can be change from the preloaded dictionary, random characters, or random numbers.\r\n      </p>\r\n      <p>\r\n      <strong> • Shuffling Data :</strong>  You can also shuffle or randomize the order of the lines or randomize the characters in each line\r\n      </p>\r\n      <p>\r\n      <strong> • Clean Up Data :</strong> Cleaning up your data is also a breeze. Duplicate data removal per line, removing any unseen whitespace, removing empty lines or just trimming each line of excess space.\r\n      </p>\r\n      <p>\r\n      <strong> • Copy Data :</strong> Copy your data is also a breeze. Duplicate data  per line, , copy lines or just trimming each line of excess space.\r\n      </p>\r\n\r\n     \r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nfunction Alert(props) {\r\n  const capitalize = (word) => {\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  };\r\n\r\n  return (\r\n   <div style={{height:\"50px\"}}>\r\n{props.alert && <div className={`alert alert-${props.alert.type} alert dismissible fade show`} role=\"alert\">\r\n  <strong> {capitalize(props.alert.type)}</strong>:{props.alert.msg}\r\n  </div>}\r\n   </div>\r\n  )\r\n}\r\n\r\nexport default Alert;\r\n","import React from \"react\";\r\n\r\nexport default function Contact(props) {\r\n  return (\r\n    <div\r\n      className=\"container\"\r\n      style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}\r\n    >\r\n      <h1>{props.heading}</h1>\r\n      <h1 className=\"my-3\"> Contact Us !!</h1>\r\n\r\n      <div className=\"mb-3\">\r\n        <label htmlFor=\"exampleFormControlInput1\" className=\"form-label\">\r\n          Your Name\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          id=\"exampleFormControlInput1\"\r\n          placeholder=\"Entre Your Name.\"\r\n          style={{\r\n            backgroundColor: props.mode === \"dark\" ? \"#343a40\" : \"white\",\r\n            color: props.mode === \"dark\" ? \"white\" : \"#343a40\",\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"mb-3\">\r\n        <label htmlFor=\"exampleFormControlInput1\" className=\"form-label\">\r\n          Email Address\r\n        </label>\r\n        <input\r\n          type=\"email\"\r\n          className=\"form-control\"\r\n          id=\"exampleFormControlInput1\"\r\n          placeholder=\"Entre Your Email.\"\r\n          style={{\r\n            backgroundColor: props.mode === \"dark\" ? \"#343a40\" : \"white\",\r\n            color: props.mode === \"dark\" ? \"white\" : \"#343a40\",\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"mb-3\">\r\n        <label htmlFor=\"exampleFormControlInput1\" className=\"form-label\">\r\n          Your Phone Number.\r\n        </label>\r\n        <input\r\n          type=\"number\"\r\n          className=\"form-control\"\r\n          id=\"exampleFormControlInput1\"\r\n          placeholder=\"Entre Your Number\"\r\n          style={{\r\n            backgroundColor: props.mode === \"dark\" ? \"#343a40\" : \"white\",\r\n            color: props.mode === \"dark\" ? \"white\" : \"#343a40\",\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"mb-3\">\r\n        <label htmlFor=\"exampleFormControlTextarea1\" className=\"form-label\">\r\n          Describe what you want to contact us for here\r\n        </label>\r\n        <textarea\r\n          className=\"form-control\"\r\n          style={{\r\n            backgroundColor: props.mode === \"dark\" ? \"#343a40\" : \"white\",\r\n            color: props.mode === \"dark\" ? \"white\" : \"#343a40\",\r\n          }}\r\n          id=\"myBox\"\r\n          rows=\"5\"\r\n        ></textarea>\r\n      </div>\r\n\r\n      <input  className=\"btn btn-primary\" type=\"submit\" value=\"Submit\" ></input>\r\n    </div>\r\n  );\r\n}\r\n","// import About from \"./Components/About\";\nimport Navbar from \"./Components/Navbar\";\nimport TextForm from \"./Components/TextForm\";\nimport About from \"./Components/About\";\nimport React, { useState } from \"react\";\nimport Alert from \"./Components/Alert\";\nimport Contact from \"./Components/Contact\";\n\n//Router function.\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\nfunction App() {\n\n  //Alert function\n  const [mode, setMode] = useState(\"light\");\n\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n//Dark and Light mode functionc\n  const toggledMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#343a40\";\n      showAlert(\"Dark mode is enabled\", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode is enabled\", \"success\");\n    }\n  };\n\n  return (\n    <Router>\n      <Navbar\n        title=\"TextUtils.\"\n        AboutText=\"About Us\"\n        Contact=\"Contact Us\"\n        mode={mode}\n       \n        toggledMode={toggledMode}\n      />\n\n      <Alert alert={alert} />\n      <div className=\"container\">\n        <Routes>\n          <Route\n            exact\n            path=\"/About\"\n            element={<About toggledMode={toggledMode} mode={mode} />}\n          ></Route>\n          <Route\n            exact\n            path=\"/\"\n            element={\n              <TextForm\n                heading=\"Enter text to analyze\"\n                mode={mode}\n                showAlert={showAlert}\n              />\n            }\n          ></Route>\n\n          <Route\n            exact\n            path=\"/Contact\"\n            element={<Contact toggledMode={toggledMode} mode={mode} showAlert={showAlert}/>}\n          ></Route>\n        </Routes>\n        \n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}